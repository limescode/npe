plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.gorylenko.gradle-git-properties" version "2.2.4"
    id 'java'
}

group = 'pl.singletone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

task generateTopicssAndComments() {
    doLast {
        File dataSql = file("src/main/resources/data.sql")
        dataSql.write("")
        //topics
        for (int i = 1; i <= 100; i++) {
            dataSql.append("insert into topic(id, title, content, created) " +
                    "values (${i}, 'Test topic ${i}', 'Content ${i}', '"+ LocalDateTime.now().minusDays(100 - i) +"');\n")
        }
        //komentarze
        for (int i = 1; i <= 100; i++) {
            int topicId = 1 + i / 10
            dataSql.append("insert into comment(id, topic_id, content, created) " +
                    "values (${i}, ${topicId}, 'Comment ${i}', '"+ LocalDateTime.now().minusDays(100 - i) +"');\n")
        }
    }
}
